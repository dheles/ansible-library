# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative './script/authorize_key'

domain          = "boxen.dev"
auto_user       = "deploy"
auto_key        = "~/.ssh/personal_dev.pub"

# NOTE: currently using the same OS for all boxen
OS="centos" # "debian" || "centos"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  package=""
  if OS=="debian"
    config.vm.box = "debian/jessie64"
    package="_apt"
  elsif OS=="centos"
    config.vm.box = "centos/7"
    package="_yum"
  else
    puts "you must set the OS variable to a valid value before continuing"
    exit
  end

  {
    'logs'  => '10.11.12.30',
    'webs'  => '10.10.12.31'
  }.each do |short_name, ip|
    config.vm.define short_name do |host|
      host.vm.network 'private_network', ip: ip
      host.vm.hostname = "#{short_name}.#{domain}"
      # presumes installation of https://github.com/cogitatio/vagrant-hostsupdater on host
      host.hostsupdater.aliases = ["#{short_name}"]
      # avoinding "Authentication failure" issue
      host.ssh.insert_key = false
      host.vm.synced_folder ".", "/vagrant", disabled: true

      host.vm.provider "virtualbox" do |vb|
        vb.name = "#{short_name}.#{domain}"
        vb.memory = 256
        vb.linked_clone = true
      end

      # do minimal provisioning (in order to do further work with Ansible)
      host.vm.provision "prerequisites", type: "shell", path: "script/prereqs#{package}.sh"

      # add authorized key to user created by the prereqs script
      authorize_key host, auto_user, auto_key
    end
  end

  # include a playbook in provisioning
  # vm (re)defined here must match a shortname above
  config.vm.define "logs" do |logs|
    logs.vm.provision "ansible" do |ansible|
      ansible.galaxy_role_file = "requirements.yml"
      ansible.playbook = "main.yml"
    end
  end

  # REM:
  # test: ansible all -m ping
  # run playbooks post-provisioning: ansible-playbook playbook.yml -i hosts
end
